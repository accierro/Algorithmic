{"version":3,"sources":["types/index.ts","types/enums.ts","components/header/Header.tsx","components/field/StartCell.tsx","components/field/EndCell.tsx","components/field/FieldRow.tsx","algorithms/BaseAlgorithm.ts","algorithms/BreadthFirstSearch.ts","algorithms/DepthFirstSearch.ts","algorithms/PriorityQueue.ts","algorithms/Djikstra.ts","algorithms/GreedyAlgorithm.ts","algorithms/AStarAlgorithm.ts","constants/Algorithms.ts","context/GridSettingsContext.ts","components/field/Field.tsx","components/input/DropDownMenu.tsx","components/controller/WallsController.tsx","components/input/ButtonSwitch.tsx","components/input/CheckBox.tsx","components/settings/PathFinderSettings.tsx","components/preview/Pager.tsx","components/warning/WarningBlock.tsx","components/common/Shortcut.tsx","components/preview/PreviewBox.tsx","components/preview/TransparentBackgroundFullScreen.tsx","components/preview/Preview.tsx","components/common/Flex.tsx","components/common/TabNavigation.tsx","components/preview/InfoPage.tsx","views/MainView.tsx","constants/Preview.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["AlgorithmEnum","SpeedEnum","AlgorithmStatus","Header","onTutorial","onInfo","className","onClick","size","style","marginLeft","window","open","StartCell","cell","key","x","y","div","initial","top","animate","transition","ease","duration","position","left","EndCell","memo","row","showWeights","map","c","isStart","isEnd","isWall","isShortestPath","visited","background","color","e","weight","prev","next","areEqual","BaseAlgorithm","options","grid","startCell","targetCell","rows","columns","iter","finished","this","red","green","blue","Math","min","includeVisited","neighboors","check","getColor","marked","push","diff","i","length","j","BreadthFirstSearch","queue","changedRows","Set","node","shift","getNeighboors","forEach","n","add","DepthFirstSearch","stack","pop","PriorityQueue","items","elem","priority","contain","splice","t","console","log","Djikstra","dist","Map","previousCell","set","Infinity","enqueue","found","isEmpty","dequeue","exisitingDist","get","distToNeighboor","hasValue","changePriority","current","GreedyAlgorithm","distToTarget","manhattanDistanceHeuristic","abs","AStarAlgorithm","resume","ALGORITHMS","BREADTH_FIRST_SEARCH","name","id","start","DEPTH_FIRST_SEARCH","DJIKSTRA","GREEDY_ALGORITHM","A_STAR_ALGORITHM","SPEED","value","label","SLOW","MEDIUM","FAST","DIMENSIONS","defaultContext","algorithm","status","PREPARATION","fieldCallbacks","reset","resetWalls","generateRandomWalls","walls","speed","dimensions","setAlgorithm","setWalls","setFieldCallbacks","setSpeed","setStatus","setShowWeights","GridSettingsContext","React","createContext","getGrid","arr","undefined","isValidWeightIncrease","r","Field","useContext","useState","changeDiff","setChangeDiff","useRef","ref","setStart","end","setEnd","requestRef","timeoutRef","useEffect","g","counter","random","RUNNING","startTime","tick","endTime","Date","now","PAUSED","isFinished","setTimeout","FINISHED","clickCallback","useCallback","event","table","onMouseMoveHandler","altKey","floor","pageX","offsetLeft","pageY","offsetTop","cellSpacing","onMouseDown","preventDefault","addEventListener","onMouseLeave","removeEventListener","onMouseUp","shouldRender","has","DropDownMenu","disabled","onChange","dropDownIsVisible","setDropDownIsVisible","padding","borderRadius","boxShadow","display","flexDirection","justifyContent","alignItems","userSelect","cursor","opacity","transform","exit","width","height","backdropFilter","zIndex","stopPropagation","opt","WallsController","margin","marginBottom","fontWeight","fontSize","ButtonSwitch","o","classNames","classnames","CheckBox","type","checked","target","htmlFor","PathFinderSettings","marginTop","Object","values","algo","newSpeed","val","Pager","max","paddingRight","Array","fill","_","paddingLeft","WarningBlock","warnText","message","Shortcut","shortcut","isMac","navigator","platform","toUpperCase","indexOf","pages","title","body","src","process","alt","alignSelf","flexGrow","PreviewBox","page","onClose","currentPage","setCurrentPgae","useClickAway","translateY","delay","bottom","right","TransparentBackgroundFullScreen","children","Preview","Flex","orientation","TabNavigation","tabs","selected","setSelected","marginRight","InfoPage","MainView","localStorage","getItem","showPreview","setShowPreview","showInfo","setShowInfo","getWidthAndHeight","document","documentElement","clientWidth","innerWidth","clientHeight","innerHeight","App","vw","vh","setDimensions","func","debounce","Provider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.fd3510b3.chunk.js","sourcesContent":["export type Cell = {\n  x: number;\n  y: number;\n  weight: number;\n  visited: boolean;\n  isStart: boolean;\n  isEnd: boolean;\n  isWall: boolean;\n  isShortestPath: boolean;\n  iter: number;\n  marked: boolean;\n  color: string | undefined;\n};\n\nexport * from \"./enums\";\nexport * from \"./algorithms\";\n","export enum AlgorithmEnum {\n  BREADTH_FIRST_SEARCH = 1,\n  DEPTH_FIRST_SEARCH,\n  DJIKSTRA,\n  GREEDY_ALGORITHM,\n  A_STAR_ALGORITHM,\n}\n\nexport enum SpeedEnum {\n  SLOW = 1,\n  MEDIUM,\n  FAST,\n}\n\nexport enum AlgorithmStatus {\n  PREPARATION = 0,\n  RUNNING,\n  PAUSED,\n  FINISHED,\n}\n","// @ts-nocheck\nimport React from \"react\";\nimport { FaGithub } from \"react-icons/fa\";\n\ntype HeaderProps = {\n  onTutorial: () => void;\n  onInfo: () => void;\n};\n\nconst Header: React.FC<HeaderProps> = ({ onTutorial, onInfo }) => {\n  return (\n    <header>\n      <div>Algorithmic</div>\n      <div className=\"navigation\">\n        <button className=\"btn\" onClick={onTutorial}>\n          Tutorial\n        </button>\n        <button className=\"btn\" onClick={onInfo}>\n          Info\n        </button>\n        <FaGithub\n          className=\"clickable\"\n          size={30}\n          style={{ marginLeft: \"10px\" }}\n          onClick={() =>\n            window.open(\"https://github.com/accierro/algorithmic\", \"_blank\")\n          }\n        />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Cell } from \"../../types\";\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\nimport { motion } from \"framer-motion\";\n\ntype StartCellProps = {\n  cell: Cell;\n};\n\nconst StartCell: React.FC<StartCellProps> = ({ cell }) => {\n  return (\n    <td className=\"start\" key={`${cell.x}-${cell.y}`}>\n      <motion.div\n        initial={{ top: \"-21px\" }}\n        animate={{\n          top: \"-6px\",\n          transition: {\n            ease: \"easeIn\",\n            duration: 0.4,\n          },\n        }}\n        style={{ position: \"absolute\", left: \"1px\" }}\n      >\n        <FaMapMarkerAlt size={16} />\n      </motion.div>\n    </td>\n  );\n};\n\nexport default StartCell;\n","import React from \"react\";\nimport { Cell } from \"../../types\";\nimport { FaMapPin } from \"react-icons/fa\";\nimport { motion } from \"framer-motion\";\n\ntype EndCellProps = {\n  cell: Cell;\n};\n\nconst EndCell: React.FC<EndCellProps> = ({ cell }) => {\n  return (\n    <td className=\"end\" key={`${cell.x}-${cell.y}`}>\n      <motion.div\n        initial={{ top: \"-21px\" }}\n        animate={{\n          top: \"-6px\",\n          transition: {\n            ease: \"easeIn\",\n            duration: 0.4,\n          },\n        }}\n        style={{ position: \"absolute\", left: \"1px\" }}\n      >\n        <FaMapPin size={16} />\n      </motion.div>\n    </td>\n  );\n};\n\nexport default EndCell;\n","import React, { memo } from \"react\";\nimport { Cell } from \"../../types\";\nimport StartCell from \"./StartCell\";\nimport EndCell from \"./EndCell\";\n\ntype FieldRowProps = {\n  row: Cell[];\n  areEqual: boolean;\n  showWeights: boolean;\n  onClick: (\n    e: React.MouseEvent<HTMLTableDataCellElement, MouseEvent>,\n    r: number,\n    c: number\n  ) => void;\n};\n\nconst FieldRow: React.FC<FieldRowProps> = ({ row, showWeights, onClick }) => {\n  return (\n    <tr>\n      {row.map((c) => {\n        if (c.isStart) {\n          return <StartCell cell={c} key={`${c.x}-${c.y}`} />;\n        }\n        if (c.isEnd) {\n          return <EndCell cell={c} key={`${c.x}-${c.y}`} />;\n        }\n        return (\n          <td\n            className={`${\n              c.isWall\n                ? \"wall\"\n                : c.isShortestPath\n                ? \"shortest\"\n                : c.visited\n                ? \"visited\"\n                : \"\"\n            }`}\n            style={{\n              background: c.color,\n            }}\n            key={`${c.x}-${c.y}`}\n            onClick={(e) => onClick(e, c.x, c.y)}\n          >\n            {showWeights && !c.isWall ? c.weight : \"\"}\n          </td>\n        );\n      })}\n    </tr>\n  );\n};\n\nexport default memo(FieldRow, (prev, next) => {\n  return (\n    prev.onClick === next.onClick &&\n    next.areEqual &&\n    prev.showWeights === next.showWeights\n  );\n});\n","import { Cell, AlgorithmOptions } from \"../types\";\n\nclass BaseAlgorithm {\n  protected grid: Cell[][];\n\n  protected startCell: Cell;\n  protected targetCell: Cell;\n\n  protected rows: number;\n  protected columns: number;\n  protected iter: number;\n\n  protected finished: boolean;\n\n  constructor(options: AlgorithmOptions) {\n    this.grid = options.grid;\n    this.startCell = options.startCell;\n    this.targetCell = options.targetCell;\n\n    this.rows = options.rows;\n    this.columns = options.columns;\n\n    this.iter = 0;\n\n    this.finished = false;\n  }\n\n  getColor(): string {\n    const red = 10 - (10 - 6) * (this.iter / (60 * 70));\n    const green = 132 - (132 - 51) * (this.iter / (60 * 70));\n    const blue = 255 - (255 - 97) * (this.iter / (60 * 70));\n\n    return `rgb(${Math.min(10, red)}, ${Math.min(132, green)}, ${Math.min(\n      255,\n      blue\n    )})`;\n  }\n\n  getNeighboors(grid: Cell[][], cell: Cell, includeVisited = false): Cell[] {\n    this.iter++;\n    const neighboors = [];\n    const { x, y } = cell;\n    if (x - 1 >= 0) {\n      const check = grid[x - 1][y];\n      if (!check.isWall && (includeVisited || !check.visited)) {\n        check.iter = this.iter;\n        check.color = this.getColor();\n        check.marked = true;\n        neighboors.push(check);\n      }\n    }\n\n    if (y - 1 >= 0) {\n      const check = grid[x][y - 1];\n      if (!check.isWall && (includeVisited || !check.visited)) {\n        check.iter = this.iter;\n        check.color = this.getColor();\n        check.marked = true;\n        neighboors.push(check);\n      }\n    }\n\n    if (y + 1 < this.columns) {\n      const check = grid[x][y + 1];\n      if (!check.isWall && (includeVisited || !check.visited)) {\n        check.iter = this.iter;\n        check.color = this.getColor();\n        check.marked = true;\n        neighboors.push(check);\n      }\n    }\n\n    if (x + 1 < this.rows) {\n      const check = grid[x + 1][y];\n      if (!check.isWall && (includeVisited || !check.visited)) {\n        check.iter = this.iter;\n        check.color = this.getColor();\n        check.marked = true;\n        neighboors.push(check);\n      }\n    }\n\n    return neighboors;\n  }\n\n  deleteWalls(): number[] {\n    const diff = [];\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid[i].length; j++) {\n        if (this.grid[i][j].isWall) {\n          this.grid[i][j].isWall = false;\n          diff.push(i);\n        }\n      }\n    }\n    return diff;\n  }\n\n  isFinished(): boolean {\n    return this.finished;\n  }\n}\n\nexport default BaseAlgorithm;\n","import { Cell, AlgorithmOptions } from \"../types\";\nimport BaseAlgorithm from \"./BaseAlgorithm\";\n\nclass BreadthFirstSearch extends BaseAlgorithm {\n  private queue: Cell[];\n  constructor(options: AlgorithmOptions) {\n    super(options);\n    this.startCell.visited = true;\n    this.queue = [this.startCell];\n  }\n\n  tick() {\n    const changedRows: Set<number> = new Set();\n    if (this.queue.length !== 0) {\n      const node = this.queue.shift() as Cell;\n      this.getNeighboors(this.grid, node).forEach((n) => {\n        if (n === this.targetCell) {\n          this.finished = true;\n        } else if (!n.visited) {\n          changedRows.add(n.x);\n          n.visited = true;\n          this.queue.push(n);\n        }\n      });\n    } else {\n      this.finished = true;\n    }\n    return { changedRows };\n  }\n}\n\nexport default BreadthFirstSearch;\n","import { AlgorithmOptions, Cell } from \"../types\";\nimport BaseAlgorithm from \"./BaseAlgorithm\";\n\nclass DepthFirstSearch extends BaseAlgorithm {\n  private stack: Cell[];\n\n  constructor(options: AlgorithmOptions) {\n    super(options);\n\n    this.stack = [this.startCell];\n  }\n\n  tick() {\n    const changedRows: Set<number> = new Set();\n\n    if (this.stack.length !== 0) {\n      const node = this.stack.pop() as Cell;\n      node.visited = true;\n      const { x } = node;\n      changedRows.add(x);\n\n      this.getNeighboors(this.grid, node).forEach((n) => {\n        if (n === this.targetCell) {\n          this.finished = true;\n        } else if (!n.visited) {\n          this.stack.push(n);\n        }\n      });\n    } else {\n      this.finished = true;\n    }\n\n    return { changedRows };\n  }\n}\n\nexport default DepthFirstSearch;\n","class PriorityQueue<T> {\n  private items: { elem: T; priority: number }[];\n  constructor() {\n    this.items = [];\n  }\n\n  enqueue(elem: T, priority: number) {\n    let contain = false;\n\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].priority < priority) {\n        this.items.splice(i, 0, { elem, priority });\n        contain = true;\n        break;\n      }\n    }\n\n    if (!contain) {\n      this.items.push({ elem, priority });\n    }\n  }\n\n  dequeue(): T | undefined {\n    return this.items.pop()?.elem;\n  }\n  isEmpty(): boolean {\n    return this.items.length === 0;\n  }\n\n  changePriority(t: T, priority: number) {\n    let deleted = false;\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].elem === t) {\n        this.items.splice(i, 1);\n        break;\n      }\n    }\n    if (deleted) {\n      this.enqueue(t, priority);\n    }\n  }\n\n  hasValue(t: T): boolean {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].elem === t) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  printQueue() {\n    console.log(this.items);\n  }\n}\n\nexport default PriorityQueue;\n","import { AlgorithmOptions, Cell } from \"../types\";\nimport PriorityQueue from \"./PriorityQueue\";\nimport BaseAlgorithm from \"./BaseAlgorithm\";\n\nclass Djikstra extends BaseAlgorithm {\n  private dist = new Map<Cell, number>();\n  private queue = new PriorityQueue<Cell>();\n  private previousCell = new Map<Cell, Cell | null>();\n\n  constructor(options: AlgorithmOptions) {\n    super(options);\n\n    this.dist.set(this.startCell, 0);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.grid[i][j] !== this.startCell) {\n          this.dist.set(this.grid[i][j], Infinity);\n          this.previousCell.set(this.grid[i][j], null);\n        }\n      }\n    }\n\n    this.queue.enqueue(this.startCell, 0);\n  }\n\n  tick() {\n    let found = false;\n    const changedRows: Set<number> = new Set();\n\n    if (!this.queue.isEmpty()) {\n      const node = this.queue.dequeue() as Cell;\n      const { x } = node;\n\n      this.getNeighboors(this.grid, node).forEach((n) => {\n        const exisitingDist = this.dist.get(n) as number;\n        const distToNeighboor = (this.dist.get(node) as number) + n.weight;\n\n        if (distToNeighboor < exisitingDist) {\n          this.dist.set(n, distToNeighboor);\n\n          if (this.queue.hasValue(n)) {\n            this.queue.changePriority(n, distToNeighboor);\n            this.previousCell.set(n, node);\n          }\n        }\n\n        if (!this.queue.hasValue(n)) {\n          this.queue.enqueue(n, distToNeighboor);\n          this.previousCell.set(n, node);\n        }\n      });\n\n      if (node === this.targetCell) {\n        this.finished = true;\n        found = true;\n      }\n      node.visited = true;\n      changedRows.add(x);\n    } else {\n      this.finished = true;\n    }\n\n    if (found) {\n      let current = this.targetCell;\n      current.isShortestPath = true;\n      let i = 0;\n      while (current !== this.startCell && i < 100) {\n        current = this.previousCell.get(current) as Cell;\n        current.isShortestPath = true;\n        changedRows.add(current.x);\n        i++;\n      }\n    }\n\n    return { changedRows };\n  }\n}\n\nexport default Djikstra;\n","import BaseAlgorithm from \"./BaseAlgorithm\";\nimport { AlgorithmOptions, Cell } from \"../types\";\nimport PriorityQueue from \"./PriorityQueue\";\n\nclass GreedyAlgorithm extends BaseAlgorithm {\n  private dist = new Map<Cell, number>();\n  private queue = new PriorityQueue<Cell>();\n  private previousCell = new Map<Cell, Cell | null>();\n\n  constructor(options: AlgorithmOptions) {\n    super(options);\n\n    this.dist.set(this.startCell, 0);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.grid[i][j] !== this.startCell) {\n          this.dist.set(this.grid[i][j], Infinity);\n          this.previousCell.set(this.grid[i][j], null);\n        }\n      }\n    }\n\n    this.queue.enqueue(this.startCell, 0);\n  }\n\n  tick() {\n    let found = false;\n    const changedRows: Set<number> = new Set();\n\n    if (!this.queue.isEmpty()) {\n      const node = this.queue.dequeue() as Cell;\n\n      const { x } = node;\n\n      this.getNeighboors(this.grid, node).forEach((n) => {\n        const exisitingDist = this.dist.get(n) as number;\n        const distToTarget = this.manhattanDistanceHeuristic(n);\n\n        if (distToTarget < exisitingDist) {\n          this.dist.set(n, distToTarget);\n\n          if (this.queue.hasValue(n)) {\n            this.queue.changePriority(n, distToTarget);\n          }\n        }\n\n        if (!this.queue.hasValue(n)) {\n          this.queue.enqueue(n, distToTarget);\n        }\n\n        this.previousCell.set(n, node);\n      });\n\n      if (node === this.targetCell) {\n        found = true;\n        this.finished = true;\n      }\n      node.visited = true;\n      changedRows.add(x);\n    } else {\n      this.finished = true;\n    }\n\n    if (found) {\n      let current = this.targetCell;\n      current.isShortestPath = true;\n      let i = 0;\n      while (current !== this.startCell && i < 100) {\n        current = this.previousCell.get(current) as Cell;\n        current.isShortestPath = true;\n        changedRows.add(current.x);\n        i++;\n      }\n    }\n\n    return { changedRows };\n  }\n\n  manhattanDistanceHeuristic(cell: Cell): number {\n    const dx = Math.abs(cell.x - this.targetCell.x);\n    const dy = Math.abs(cell.y - this.targetCell.y);\n    return dx + dy;\n  }\n}\n\nexport default GreedyAlgorithm;\n","import BaseAlgorithm from \"./BaseAlgorithm\";\nimport { AlgorithmOptions, Cell } from \"../types\";\nimport PriorityQueue from \"./PriorityQueue\";\n\nclass AStarAlgorithm extends BaseAlgorithm {\n  private dist = new Map<Cell, number>();\n  private queue = new PriorityQueue<Cell>();\n  private previousCell = new Map<Cell, Cell | null>();\n\n  constructor(options: AlgorithmOptions) {\n    super(options);\n\n    this.dist.set(this.startCell, 0);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.grid[i][j] !== this.startCell) {\n          this.dist.set(this.grid[i][j], Infinity);\n          this.previousCell.set(this.grid[i][j], null);\n        }\n      }\n    }\n\n    this.queue.enqueue(this.startCell, 0);\n  }\n\n  tick() {\n    let found = false;\n    const changedRows: Set<number> = new Set();\n\n    if (!this.queue.isEmpty()) {\n      const node = this.queue.dequeue() as Cell;\n\n      const { x } = node;\n\n      this.getNeighboors(this.grid, node).forEach((n) => {\n        const exisitingDist = this.dist.get(n) as number;\n        const distToTarget =\n          (this.dist.get(node) as number) +\n          n.weight * 2 +\n          this.manhattanDistanceHeuristic(n);\n\n        if (distToTarget < exisitingDist) {\n          this.dist.set(n, distToTarget);\n\n          if (this.queue.hasValue(n)) {\n            this.queue.changePriority(n, distToTarget);\n            this.previousCell.set(n, node);\n          }\n        }\n\n        if (!this.queue.hasValue(n)) {\n          this.queue.enqueue(n, distToTarget);\n          this.previousCell.set(n, node);\n        }\n      });\n\n      if (node === this.targetCell) {\n        found = true;\n        this.finished = true;\n      }\n      node.visited = true;\n      changedRows.add(x);\n    } else {\n      this.finished = true;\n    }\n\n    if (found) {\n      let current = this.targetCell;\n      current.isShortestPath = true;\n      let i = 0;\n      while (current !== this.startCell && i < 100) {\n        current = this.previousCell.get(current) as Cell;\n        current.isShortestPath = true;\n        changedRows.add(current.x);\n        i++;\n      }\n    }\n\n    return { resume: !found || this.queue.isEmpty(), changedRows };\n  }\n\n  manhattanDistanceHeuristic(cell: Cell): number {\n    const dx = Math.abs(cell.x - this.targetCell.x);\n    const dy = Math.abs(cell.y - this.targetCell.y);\n    return dx + dy;\n  }\n}\n\nexport default AStarAlgorithm;\n","import { AlgorithmEnum, AlgorithmStore, SpeedEnum } from \"../types\";\nimport BreadthFirstSearch from \"../algorithms/BreadthFirstSearch\";\nimport DepthFirstSearch from \"../algorithms/DepthFirstSearch\";\nimport Djikstra from \"../algorithms/Djikstra\";\nimport GreedyAlgorithm from \"../algorithms/GreedyAlgorithm\";\nimport AStarAlgorithm from \"../algorithms/AStarAlgorithm\";\n\nexport const ALGORITHMS: AlgorithmStore = {\n  [AlgorithmEnum.BREADTH_FIRST_SEARCH]: {\n    name: \"Breadth First Search\",\n    id: AlgorithmEnum.BREADTH_FIRST_SEARCH,\n    start: (options) => {\n      return new BreadthFirstSearch(options);\n    },\n  },\n  [AlgorithmEnum.DEPTH_FIRST_SEARCH]: {\n    name: \"Depth First Search\",\n    id: AlgorithmEnum.DEPTH_FIRST_SEARCH,\n    start: (options) => {\n      return new DepthFirstSearch(options);\n    },\n  },\n  [AlgorithmEnum.DJIKSTRA]: {\n    name: \"Djikstra Algorithm\",\n    id: AlgorithmEnum.DJIKSTRA,\n    start: (options) => {\n      return new Djikstra(options);\n    },\n  },\n  [AlgorithmEnum.GREEDY_ALGORITHM]: {\n    name: \"Greedy Algorithm\",\n    id: AlgorithmEnum.GREEDY_ALGORITHM,\n    start: (options) => {\n      return new GreedyAlgorithm(options);\n    },\n  },\n  [AlgorithmEnum.A_STAR_ALGORITHM]: {\n    name: \"A* Algorithm\",\n    id: AlgorithmEnum.A_STAR_ALGORITHM,\n    start: (options) => {\n      return new AStarAlgorithm(options);\n    },\n  },\n};\n\nexport const SPEED = [\n  {\n    value: 110,\n    label: \"Slow\",\n    id: SpeedEnum.SLOW,\n  },\n  {\n    value: 60,\n    label: \"Medium\",\n    id: SpeedEnum.MEDIUM,\n  },\n  {\n    value: 30,\n    label: \"Fast\",\n    id: SpeedEnum.FAST,\n  },\n];\n\nexport const DIMENSIONS = {\n  minColumns: 26,\n  minRows: 37,\n  maxColumns: 85,\n  maxRows: 85,\n};\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { ALGORITHMS, SPEED, DIMENSIONS } from \"../constants/Algorithms\";\nimport {\n  Algorithm,\n  FieldCallbacks,\n  SpeedOption,\n  AlgorithmStatus,\n  Dimensions,\n} from \"../types\";\n\nexport const defaultContext = {\n  algorithm: ALGORITHMS[1],\n  status: AlgorithmStatus.PREPARATION,\n  showWeights: false,\n  fieldCallbacks: {\n    reset: () => {},\n    resetWalls: () => {},\n    generateRandomWalls: () => {},\n  },\n  walls: 0,\n  speed: SPEED[0],\n  dimensions: { columns: DIMENSIONS.minColumns, rows: DIMENSIONS.minRows },\n  setAlgorithm: () => console.log(\"NOT IMPLEMENTED\"),\n  setWalls: () => console.log(\"setWalls() NOT IMPLEMENTED\"),\n  setFieldCallbacks: () => console.log(\"setFieldCallbacks NOT IMPLEMENTED\"),\n  setSpeed: () => console.log(\"setSpeed NOT IMPLEMENTED\"),\n  setStatus: () => console.log(\"setStatus NOT IMPLEMENTED\"),\n  setShowWeights: () => console.log(\"setShowWeights NOT IMPLEMENTED\"),\n};\n\nconst GridSettingsContext = React.createContext<{\n  algorithm: Algorithm;\n  status: AlgorithmStatus;\n  showWeights: boolean;\n  walls: number;\n  speed: SpeedOption;\n  fieldCallbacks: FieldCallbacks;\n  dimensions: Dimensions;\n  setAlgorithm: Dispatch<SetStateAction<Algorithm>>;\n  setWalls: Dispatch<SetStateAction<number>>;\n  setFieldCallbacks: Dispatch<SetStateAction<FieldCallbacks>>;\n  setSpeed: Dispatch<SetStateAction<SpeedOption>>;\n  setStatus: Dispatch<SetStateAction<AlgorithmStatus>>;\n  setShowWeights: Dispatch<SetStateAction<boolean>>;\n}>(defaultContext);\n\nexport default GridSettingsContext;\n","import React, {\n  useRef,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from \"react\";\nimport \"../../css/field.scss\";\nimport { Cell, IAlgorithm, AlgorithmStatus } from \"../../types\";\nimport FieldRow from \"./FieldRow\";\nimport GridSettingsContext from \"../../context/GridSettingsContext\";\n\nfunction getGrid(rows: number, columns: number): Cell[][] {\n  const arr = [];\n  for (let i = 0; i < rows; i++) {\n    let row = [];\n    for (let j = 0; j < columns; j++) {\n      row.push({\n        x: i,\n        y: j,\n        weight: 1,\n        visited: false,\n        isStart: false,\n        isEnd: false,\n        isWall: false,\n        isShortestPath: false,\n        iter: 0,\n        marked: false,\n        color: undefined,\n      });\n    }\n    arr.push(row);\n  }\n  return arr;\n}\n\nfunction isValidWeightIncrease(grid: Cell[][], r: number, c: number): boolean {\n  if (r >= 0 && r < grid.length && c >= 0 && c < grid[r].length) {\n    const cell = grid[r][c];\n    if (!cell.isWall && !cell.isEnd && !cell.isStart && !cell.visited) {\n      return true;\n    }\n  }\n  return false;\n}\n\nconst Field: React.FC<{}> = () => {\n  const {\n    status,\n    showWeights,\n    algorithm,\n    speed,\n    dimensions,\n    setWalls,\n    setFieldCallbacks,\n    setStatus,\n  } = useContext(GridSettingsContext);\n  const [changeDiff, setChangeDiff] = useState<Set<number>>(new Set());\n  let grid = useRef<Cell[][]>(getGrid(dimensions.rows, dimensions.columns));\n  const ref = useRef<IAlgorithm | null>(null);\n  const [start, setStart] = useState<{ x: number; y: number } | null>(null);\n  const [end, setEnd] = useState<{ x: number; y: number } | null>(null);\n  const requestRef = useRef<number | null>(null);\n  const timeoutRef = useRef<number | null>(null);\n\n  useEffect(() => {\n    setFieldCallbacks((prev) => {\n      return {\n        ...prev,\n        reset: () => {\n          grid.current = getGrid(dimensions.rows, dimensions.columns);\n          setStart(null);\n          setEnd(null);\n          setChangeDiff(new Set(grid.current.map((g, i) => i)));\n          setWalls(0);\n          ref.current = null;\n          timeoutRef.current = null;\n        },\n        generateRandomWalls: () => {\n          const diff: Set<number> = new Set();\n          let counter = 0;\n          for (let i = 0; i < grid.current.length; i++) {\n            diff.add(i);\n            for (let j = 0; j < grid.current[i].length; j++) {\n              const cell = grid.current[i][j];\n              if (!cell.visited && !cell.isEnd && !cell.isStart) {\n                const ran = Math.random();\n                if (ran < 0.15) {\n                  cell.isWall = true;\n                  counter++;\n                } else {\n                  cell.isWall = false;\n                }\n              }\n            }\n          }\n          setChangeDiff(diff);\n          setWalls(counter);\n        },\n        resetWalls: () => {\n          const diff: Set<number> = new Set();\n          for (let i = 0; i < grid.current.length; i++) {\n            for (let j = 0; j < grid.current[i].length; j++) {\n              if (grid.current[i][j].isWall) {\n                grid.current[i][j].isWall = false;\n                diff.add(i);\n              }\n            }\n          }\n          setChangeDiff(diff);\n          setWalls(0);\n        },\n      };\n    });\n  }, [grid.current, dimensions.columns, dimensions.rows]);\n  useEffect(() => {\n    if (start && end) {\n      if (ref.current === null) {\n        ref.current = algorithm.start({\n          grid: grid.current,\n          startCell: grid.current[start.x][start.y],\n          targetCell: grid.current[end.x][end.y],\n          rows: dimensions.rows,\n          columns: dimensions.columns,\n        });\n        setChangeDiff(new Set());\n        setStatus(AlgorithmStatus.RUNNING);\n      }\n    }\n  }, [start, end]);\n\n  const animate = (startTime: number) => {\n    const { changedRows } = (ref.current as IAlgorithm).tick();\n    setChangeDiff(changedRows);\n    const endTime = Date.now();\n    requestRef.current = endTime + (speed.value - (endTime - startTime));\n  };\n\n  useEffect(() => {\n    if (\n      ref.current &&\n      status !== AlgorithmStatus.PAUSED &&\n      timeoutRef.current === null\n    ) {\n      if (start && end && !ref.current?.isFinished()) {\n        const startTime = Date.now();\n        if (requestRef.current && startTime < requestRef.current) {\n          timeoutRef.current = window.setTimeout(() => {\n            if (ref.current) {\n              animate(startTime);\n              timeoutRef.current = null;\n            }\n          }, requestRef.current - startTime);\n        } else {\n          animate(startTime);\n        }\n      }\n      if (ref.current.isFinished()) {\n        setStatus(AlgorithmStatus.FINISHED);\n      }\n    }\n  });\n\n  const clickCallback = useCallback(\n    (\n      event: React.MouseEvent<HTMLTableDataCellElement, MouseEvent>,\n      r: number,\n      c: number\n    ) => {\n      if (showWeights && !(ref && ref.current?.isFinished())) {\n        const set: Set<number> = new Set();\n        if (isValidWeightIncrease(grid.current, r, c)) {\n          set.add(r);\n          grid.current[r][c].weight += 2;\n        }\n        if (isValidWeightIncrease(grid.current, r + 1, c)) {\n          set.add(r + 1);\n          grid.current[r + 1][c].weight += 1;\n        }\n        if (isValidWeightIncrease(grid.current, r - 1, c)) {\n          set.add(r - 1);\n          grid.current[r - 1][c].weight += 1;\n        }\n        if (isValidWeightIncrease(grid.current, r, c + 1)) {\n          set.add(r);\n          grid.current[r][c + 1].weight += 1;\n        }\n        if (isValidWeightIncrease(grid.current, r, c - 1)) {\n          set.add(r);\n          grid.current[r][c - 1].weight += 1;\n        }\n\n        if (set.size > 0) {\n          setChangeDiff(set);\n        }\n      } else {\n        if (start === null && !grid.current[r][c].isWall) {\n          setStart({ x: r, y: c });\n          setChangeDiff(new Set([r]));\n          grid.current[r][c].isStart = true;\n        }\n        if (end === null && start !== null && !grid.current[r][c].isWall) {\n          setEnd({ x: r, y: c });\n          setChangeDiff(new Set([r]));\n          grid.current[r][c].isEnd = true;\n        }\n      }\n    },\n    [start, end, showWeights]\n  );\n\n  const table = useRef<HTMLTableElement | null>(null);\n  const onMouseMoveHandler = useCallback(\n    (e: MouseEvent) => {\n      if (e.altKey && table.current) {\n        const y = Math.floor((e.pageX - table.current.offsetLeft) / 20);\n        const x = Math.floor((e.pageY - table.current.offsetTop) / 20);\n        if (y >= 0 && x >= 0 && y < dimensions.columns && x < dimensions.rows) {\n          const cell = grid.current[x][y];\n          if (\n            cell &&\n            !cell.isWall &&\n            !cell.marked &&\n            !(cell.visited && cell.isStart && cell.isEnd)\n          ) {\n            cell.isWall = true;\n            setChangeDiff(new Set([x]));\n            setWalls((prev) => prev + 1);\n          }\n        }\n      }\n    },\n    [grid.current, dimensions.rows, dimensions.columns]\n  );\n\n  useEffect(() => {\n    grid.current = getGrid(dimensions.rows, dimensions.columns);\n    setStart(null);\n    setEnd(null);\n    setChangeDiff(new Set(grid.current.map((g, i) => i)));\n    ref.current = null;\n    timeoutRef.current = null;\n  }, [dimensions.columns, dimensions.rows]);\n\n  return (\n    <>\n      <table\n        ref={table}\n        className=\"field\"\n        cellSpacing={0}\n        onMouseDown={(e) => {\n          e.preventDefault();\n          if (table.current && e.altKey) {\n            table.current.addEventListener(\"mousemove\", onMouseMoveHandler);\n          }\n        }}\n        onMouseLeave={() => {\n          table.current?.removeEventListener(\"mousemove\", onMouseMoveHandler);\n        }}\n        onMouseUp={() => {\n          table.current?.removeEventListener(\"mousemove\", onMouseMoveHandler);\n        }}\n      >\n        <tbody>\n          {grid.current.map((r, i) => {\n            const shouldRender = changeDiff.has(i);\n            return (\n              <FieldRow\n                key={i}\n                row={r}\n                showWeights={showWeights}\n                onClick={clickCallback}\n                areEqual={!shouldRender}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Field;\n","import React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport \"../../css/drop-down-menu.scss\";\n\ninterface OptionValue {\n  id: string | number;\n  name: string;\n}\n\ntype DropwDownMenuProps<T extends OptionValue> = {\n  options: T[];\n  value: T;\n  disabled: boolean;\n  onChange: (t: T) => void;\n};\n\nfunction DropDownMenu<T extends OptionValue>({\n  options,\n  value,\n  disabled,\n  onChange,\n}: DropwDownMenuProps<T> & { children?: React.ReactNode }): React.ReactElement {\n  const [dropDownIsVisible, setDropDownIsVisible] = useState(false);\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        background: \"#0b131b\",\n        color: \"white\",\n        padding: \"8px\",\n        borderRadius: \"4px\",\n        boxShadow: \"inset rgba(255,255,255,0.25) 0px 6px 14px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        userSelect: \"none\",\n        cursor: disabled ? \"not-allowed\" : \"pointer\",\n        opacity: disabled ? 0.4 : 1,\n      }}\n      onClick={() => {\n        if (disabled) return;\n        setDropDownIsVisible(true);\n      }}\n    >\n      {value.name}\n      <IoIosArrowDown\n        size={20}\n        style={{\n          transform: `rotate(${dropDownIsVisible ? 180 : 0}deg)`,\n          transition: \"transform 0.3s\",\n        }}\n      />\n      <AnimatePresence>\n        {dropDownIsVisible && (\n          <>\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{\n                opacity: 0.3,\n                transition: {\n                  ease: \"easeOut\",\n                  duration: 0.2,\n                },\n              }}\n              exit={{ opacity: 0 }}\n              style={{\n                position: \"fixed\",\n                top: 0,\n                left: 0,\n                background: \"rgb(0,0,0)\",\n                width: \"100vw\",\n                height: \"100vh\",\n                backdropFilter: \"blur(3px)\",\n                zIndex: 1,\n              }}\n              onClick={(e) => {\n                e.stopPropagation();\n                setDropDownIsVisible(false);\n              }}\n            ></motion.div>\n            <motion.div\n              className=\"select-menu\"\n              initial={{\n                opacity: 0,\n                transform: \"scale(0.2) translateY(-50px)\",\n              }}\n              animate={{\n                opacity: 1,\n                transform: \"scale(1)  translateY(0px)\",\n                transition: { duration: 0.15, ease: \"easeIn\" },\n              }}\n              exit={{\n                opacity: 0,\n                transform: \"scale(0.2)  translateY(-50px)\",\n                transition: { duration: 0.15, ease: \"easeIn\" },\n              }}\n            >\n              {options.map((opt) => (\n                <p\n                  className={value === opt ? \"selected\" : undefined}\n                  key={opt.id}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onChange(opt);\n                    setDropDownIsVisible(false);\n                  }}\n                >\n                  {opt.name}\n                </p>\n              ))}\n            </motion.div>\n          </>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\nexport default DropDownMenu;\n","import React, { useContext } from \"react\";\nimport { IoIosInformationCircleOutline } from \"react-icons/io\";\nimport GridSettingsContext from \"../../context/GridSettingsContext\";\n\ntype WallsControllerProps = {\n  onInfo: () => void;\n};\n\nconst WallsController: React.FC<WallsControllerProps> = ({ onInfo }) => {\n  const { walls, fieldCallbacks } = useContext(GridSettingsContext);\n  return (\n    <div style={{ margin: \"20px 0\" }}>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginBottom: \"8px\",\n        }}\n      >\n        <h2\n          style={{ fontWeight: 300, fontSize: \"1.35em\", margin: \"0 16px 0 0\" }}\n        >\n          <span style={{ fontSize: \"1.2em\", fontWeight: 500 }}>{walls}</span>{\" \"}\n          Walls\n        </h2>\n        <IoIosInformationCircleOutline\n          className=\"clickable\"\n          onClick={onInfo}\n          size={26}\n        />\n      </div>\n      <div\n        style={{\n          width: \"145px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <button\n          className=\"btn primary\"\n          onClick={() => fieldCallbacks.generateRandomWalls()}\n        >\n          Random\n        </button>\n        <button\n          disabled={walls === 0}\n          className=\"btn primary danger\"\n          onClick={() => fieldCallbacks.resetWalls()}\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default WallsController;\n","import React from \"react\";\nimport classnames from \"classnames\";\n\ninterface Option {\n  label: string;\n  value: string | number;\n}\n\ntype ButtonSwitchProps<T extends Option> = {\n  value: T;\n  options: T[];\n  onChange: (t: T) => void;\n};\n\nfunction ButtonSwitch<T extends Option>({\n  options,\n  value,\n  onChange,\n}: ButtonSwitchProps<T> & { children?: React.ReactNode }): React.ReactElement {\n  return (\n    <div className=\"button-switch\">\n      {options.map((o) => {\n        const classNames = classnames({\n          \"button-switch-btn\": true,\n          \"button-switch-btn__selected\": o === value,\n        });\n        return (\n          <button\n            key={o.label}\n            className={classNames}\n            onClick={() => {\n              if (o !== value) {\n                onChange(o);\n              }\n            }}\n          >\n            {o.label}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default ButtonSwitch;\n","import React from \"react\";\nimport \"../../css/checkbox.scss\";\n\ntype CheckBoxProps = {\n  value: boolean;\n  label?: string;\n  onChange: (val: boolean) => void;\n};\n\nconst CheckBox: React.FC<CheckBoxProps> = ({ label, value, onChange }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        margin: \"4px 0\",\n      }}\n    >\n      <input\n        className=\"react-checkbox\"\n        name={label}\n        type=\"checkbox\"\n        checked={value}\n        onChange={(e) => {\n          onChange(e.target.checked);\n        }}\n      />\n      <label htmlFor={label} style={{ fontSize: \"13pt\", color: \"#1f1f1f\" }}>\n        {label}\n      </label>\n    </div>\n  );\n};\n\nexport default CheckBox;\n","import React, { useContext } from \"react\";\nimport GridSettingsContext from \"../../context/GridSettingsContext\";\nimport DropDownMenu from \"../input/DropDownMenu\";\nimport { ALGORITHMS, SPEED } from \"../../constants/Algorithms\";\nimport WallsController from \"../controller/WallsController\";\nimport { Algorithm, AlgorithmStatus } from \"../../types\";\nimport ButtonSwitch from \"../input/ButtonSwitch\";\nimport { IoIosInformationCircleOutline } from \"react-icons/io\";\nimport CheckBox from \"../input/CheckBox\";\n\ntype PathFinderSettingsProps = {\n  onTutorial: (n: number) => void;\n};\n\nconst PathFinderSettings: React.FC<PathFinderSettingsProps> = ({\n  onTutorial,\n}) => {\n  const {\n    algorithm,\n    setAlgorithm,\n    speed,\n    setSpeed,\n    fieldCallbacks,\n    status,\n    setStatus,\n    showWeights,\n    setShowWeights,\n  } = useContext(GridSettingsContext);\n  return (\n    <div className=\"path-finder-settings\">\n      <div>\n        <h2\n          style={{\n            marginTop: 0,\n            fontWeight: 300,\n            marginBottom: \"8px\",\n            fontSize: \"1.35em\",\n          }}\n        >\n          Algorithm\n        </h2>\n        <DropDownMenu\n          disabled={status !== AlgorithmStatus.PREPARATION}\n          value={algorithm}\n          options={Object.values(ALGORITHMS)}\n          onChange={(algo: Algorithm) => setAlgorithm(algo)}\n        />\n        <WallsController onInfo={() => onTutorial(3)} />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginBottom: \"8px\",\n          }}\n        >\n          <h2\n            style={{\n              fontWeight: 300,\n              fontSize: \"1.35em\",\n              margin: \"0 16px 0 0\",\n            }}\n          >\n            Speed\n          </h2>\n          <IoIosInformationCircleOutline\n            className=\"clickable\"\n            size={26}\n            onClick={() => onTutorial(2)}\n          />\n        </div>\n        <ButtonSwitch\n          options={SPEED}\n          value={speed}\n          onChange={(newSpeed) => {\n            setSpeed(newSpeed);\n          }}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginTop: \"20px\",\n          }}\n        >\n          <h2\n            style={{\n              fontWeight: 300,\n              fontSize: \"1.35em\",\n              margin: \"0 16px 0 0\",\n            }}\n          >\n            Weights\n          </h2>\n          <IoIosInformationCircleOutline\n            className=\"clickable\"\n            size={26}\n            onClick={() => onTutorial(4)}\n          />\n        </div>\n        <CheckBox\n          value={showWeights}\n          onChange={(val) => {\n            setShowWeights(val);\n          }}\n          label=\"Show weigths\"\n        />\n        <div\n          style={{\n            marginTop: \"32px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n          <div style={{ position: \"relative\" }}>\n            {status === AlgorithmStatus.FINISHED && (\n              <div className=\"pinger\"></div>\n            )}\n            <button\n              className=\"btn primary danger md\"\n              onClick={() => {\n                fieldCallbacks.reset();\n                setStatus(AlgorithmStatus.PREPARATION);\n              }}\n            >\n              Reset\n            </button>\n          </div>\n          <button\n            style={{ marginLeft: \"16px\" }}\n            className=\"btn primary md\"\n            disabled={\n              status === AlgorithmStatus.FINISHED ||\n              status === AlgorithmStatus.PREPARATION\n            }\n            onClick={() => {\n              if (status === AlgorithmStatus.RUNNING) {\n                setStatus(AlgorithmStatus.PAUSED);\n              } else {\n                setStatus(AlgorithmStatus.RUNNING);\n              }\n            }}\n          >\n            {status === AlgorithmStatus.PAUSED ? \"Continue\" : \"Pause\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PathFinderSettings;\n","import React from \"react\";\nimport { FiChevronRight, FiChevronLeft } from \"react-icons/fi\";\nimport \"../../css/pager.scss\";\n\ntype PagerProps = {\n  current: number;\n  max: number;\n  onChange: (n: number) => void;\n};\n\nconst Pager: React.FC<PagerProps> = ({ current, max, onChange }) => {\n  return (\n    <div className=\"pager\">\n      <FiChevronLeft\n        size={25}\n        style={{ paddingRight: \"5px\" }}\n        className={`pager-controller ${current === 0 ? \"disabled\" : \"\"}`}\n        onClick={() => current > 0 && onChange(current - 1)}\n      />\n      {Array(max)\n        .fill(undefined)\n        .map((_, i) => (\n          <div\n            className={`pager-circle${current === i ? \"-selected\" : \"\"}`}\n            onClick={() => {\n              if (current !== i) {\n                onChange(i);\n              }\n            }}\n          ></div>\n        ))}\n      <FiChevronRight\n        size={25}\n        style={{ paddingLeft: \"5px\" }}\n        className={`pager-controller ${current === max - 1 ? \"disabled\" : \"\"}`}\n        onClick={() => current < max - 1 && onChange(current + 1)}\n      />\n    </div>\n  );\n};\nexport default Pager;\n","import React from \"react\";\nimport \"../../css/warning.scss\";\n\ntype WarningBlockProps = {\n  warnText?: string;\n  message: string;\n};\n\nconst WarningBlock: React.FC<WarningBlockProps> = ({\n  warnText = \"Warning! \",\n  message,\n}) => {\n  return (\n    <div className=\"warning-block\">\n      <b>{warnText}</b> {message}\n    </div>\n  );\n};\nexport default WarningBlock;\n","import React from \"react\";\n\ntype ShortcutProps = {\n  shortcut: string;\n};\n\nconst Shortcut: React.FC<ShortcutProps> = ({ shortcut }) => {\n  return <span className=\"shortcut\">{shortcut}</span>;\n};\nexport default Shortcut;\n","import React, { useRef, useState } from \"react\";\nimport { useClickAway } from \"react-use\";\nimport { motion } from \"framer-motion\";\nimport Pager from \"./Pager\";\nimport WarningBlock from \"../warning/WarningBlock\";\nimport Shortcut from \"../common/Shortcut\";\n\ntype PreviewBoxProps = {\n  page?: number;\n  onClose: () => void;\n};\n\nconst isMac = navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n\nconst pages = [\n  {\n    title: \"Welcome\",\n    body: (\n      <>\n        <p>\n          Algorithmic - is pathfinding algorithms visualizer. It was built in\n          order to help to understand how different pathfinding algorithms work\n          and what's the difference between them.\n        </p>\n        <p>\n          Currently following algorithms are supported:\n          <ul>\n            <li>Breadth First</li>\n            <li>Depth First</li>\n            <li>Djikstra</li>\n            <li>Greedy</li>\n            <li>A*</li>\n          </ul>\n        </p>\n      </>\n    ),\n  },\n  {\n    title: \"Where to Start?\",\n    body: (\n      <>\n        <p>\n          In front of you, we can see an interactive field. You are able to\n          select start and finish positions. After that selected algorithm is\n          going to run and try to find a path.\n        </p>\n        <img\n          src={`${process.env.PUBLIC_URL}/StartFinishDemo.gif`}\n          alt=\"Puting start and finish position demo\"\n          style={{\n            width: \"150px\",\n            borderRadius: \"4px\",\n            alignSelf: \"center\",\n            flexGrow: 0,\n          }}\n        />\n        <p>\n          After finishing or in progress you are able to reset the field using a{\" \"}\n          <b>Reset</b> button.\n        </p>\n        <img\n          src={`${process.env.PUBLIC_URL}/ResetDemo.gif`}\n          alt=\"Field reseting demo\"\n          style={{\n            width: \"100px\",\n            borderRadius: \"4px\",\n            alignSelf: \"center\",\n            flexGrow: 0,\n          }}\n        />\n      </>\n    ),\n  },\n  {\n    title: \"Speed Control\",\n    body: (\n      <>\n        <p>\n          You are able to control how many cells an algorithm can go through in\n          a one tick using three buttons <b>Slow</b>, <b>Medium</b> and{\" \"}\n          <b>Fast</b>.{\" \"}\n        </p>\n        <p style={{ marginTop: 0 }}>\n          Use <b>Pause</b> button to stop an execution, after use the same\n          button to continue execution.\n        </p>\n        <WarningBlock\n          warnText=\"Please Note!\"\n          message=\"Depending on your computer hardware 'Fast' option would not be a good decision if you have quite old computer.\"\n        />\n      </>\n    ),\n  },\n  {\n    title: \"We Need Walls!\",\n    body: (\n      <>\n        <p>\n          Use <Shortcut shortcut={`${isMac ? \"\\u2318\" : \"Ctr\"} + Click`} /> and\n          then move your mouse above the field thereby creating walls.\n        </p>\n        <img\n          src={`${process.env.PUBLIC_URL}/WallDemo.gif`}\n          alt=\"Wall creation demo\"\n          style={{\n            width: \"170px\",\n            borderRadius: \"4px\",\n            alignSelf: \"center\",\n            flexGrow: 0,\n            marginBottom: \"20px\",\n          }}\n        />\n        <p>\n          Use <b>Reset</b> button if you want to clean a field from walls.\n        </p>\n        <WarningBlock\n          warnText=\"Hint!\"\n          message=\"You can create/delete walls even when algorithm is already running.\"\n        />\n      </>\n    ),\n  },\n  {\n    title: \"Weights\",\n    body: (\n      <>\n        <p>\n          Each cell has weight which indicates the travel cost to that cell.\n          Weights are used by two algorithms: Djikstra and A*, others ignore\n          that value.\n        </p>\n        <p style={{ marginTop: 0 }}>\n          You can turn on/off displaying weight values inside the cell using a\n          checkbox on the right side.\n        </p>\n        <p style={{ marginTop: 0 }}>\n          In order to adjust weights turn on weights and click on the cell which\n          you want to increase the weight.\n        </p>\n        <WarningBlock\n          warnText=\"Note!\"\n          message=\"The weight on the cell you clicked increase by 2, but at the same time neighboors' weights increase by 1.\"\n        />\n        <img\n          src={`${process.env.PUBLIC_URL}/WeightAdjustDemo.gif`}\n          alt=\"Weight adjusting demo\"\n          style={{\n            width: \"200px\",\n            marginTop: \"20px\",\n            borderRadius: \"4px\",\n            alignSelf: \"center\",\n            flexGrow: 0,\n            marginBottom: \"20px\",\n          }}\n        />\n      </>\n    ),\n  },\n];\n\nconst PreviewBox: React.FC<PreviewBoxProps> = ({ page = 0, onClose }) => {\n  const ref = useRef(null);\n  const [currentPage, setCurrentPgae] = useState(page);\n  useClickAway(ref, onClose);\n  return (\n    <motion.div\n      ref={ref}\n      className=\"preview-box\"\n      initial={{ opacity: 0, translateY: -50 }}\n      animate={{ opacity: 1, translateY: 0 }}\n      exit={{ opacity: 0, translateY: 50 }}\n      transition={{ duration: 0.5, delay: 0.2 }}\n    >\n      <h1 style={{ marginBottom: 0 }}>{pages[currentPage].title}</h1>\n      {pages[currentPage].body}\n      <Pager\n        current={currentPage}\n        max={pages.length}\n        onChange={(n) => {\n          setCurrentPgae(n);\n        }}\n      />\n      <button\n        className=\"btn\"\n        style={{ position: \"absolute\", bottom: 29, right: 32 }}\n        onClick={onClose}\n      >\n        Let's go\n      </button>\n    </motion.div>\n  );\n};\n\nexport default PreviewBox;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst TransparentBackgroundFullScreen: React.FC = ({ children }) => {\n  return (\n    <motion.div\n      className=\"transparent-background\"\n      initial={{ background: \"rgba(0,0,0, 0)\" }}\n      animate={{ background: \"rgba(0,0,0, 0.4)\" }}\n      exit={{ background: \"rgba(0,0,0, 0)\" }}\n      transition={{ duration: 0.4, delay: 0.2 }}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default TransparentBackgroundFullScreen;\n","import React from \"react\";\nimport PreviewBox from \"./PreviewBox\";\nimport \"../../css/preview.scss\";\nimport TransparentBackgroundFullScreen from \"./TransparentBackgroundFullScreen\";\n\ntype PreviewProps = {\n  page?: number;\n  onClose: () => void;\n};\n\nconst Preview: React.FC<PreviewProps> = ({ onClose, page }) => {\n  return (\n    <TransparentBackgroundFullScreen>\n      <PreviewBox onClose={onClose} page={page} />\n    </TransparentBackgroundFullScreen>\n  );\n};\n\nexport default Preview;\n","import React from \"react\";\n\ntype FlexProps = {\n  orientation?: \"vertical\" | \"horizontal\";\n};\n\nconst Flex: React.FC<FlexProps> = ({ orientation = \"vertical\", children }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: orientation === \"vertical\" ? \"column\" : \"row\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\nexport default Flex;\n","import React, { useState, ReactElement } from \"react\";\nimport Flex from \"./Flex\";\n\ntype TabNavigationProps = {\n  tabs: { label: string; body: ReactElement }[];\n};\n\nconst TabNavigation: React.FC<TabNavigationProps> = ({ tabs }) => {\n  const [selected, setSelected] = useState(tabs[0]);\n  return (\n    <Flex orientation=\"vertical\">\n      <Flex orientation=\"horizontal\">\n        {tabs.map((t) => {\n          return (\n            <div\n              key={t.label}\n              style={{\n                marginRight: \"25px\",\n                fontWeight: \"bold\",\n                fontSize: \"22px\",\n                color: selected === t ? \"#0a84ff\" : \"#1c1c1e\",\n                userSelect: \"none\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => {\n                setSelected(t);\n              }}\n            >\n              {t.label}\n            </div>\n          );\n        })}\n      </Flex>\n      {selected.body}\n    </Flex>\n  );\n};\nexport default TabNavigation;\n","import React, { useRef } from \"react\";\nimport TransparentBackgroundFullScreen from \"./TransparentBackgroundFullScreen\";\nimport { useClickAway } from \"react-use\";\nimport { motion } from \"framer-motion\";\nimport TabNavigation from \"../common/TabNavigation\";\n\ntype InfoPageProps = {\n  onClose: () => void;\n};\n\nconst tabs = [\n  {\n    label: \"About\",\n    body: (\n      <>\n        <p style={{ marginBottom: 0 }}>\n          I built that web application mainly for few reasons.\n        </p>\n        <ul>\n          <li>Improve my knowledge in Typescript and React.</li>\n          <li>Learn new algorithms.</li>\n          <li>Get better understaning how to optimize React applications.</li>\n        </ul>\n      </>\n    ),\n  },\n  {\n    label: \"Stack\",\n    body: (\n      <>\n        <p style={{ marginBottom: 0 }}>The dependancy list is fairly small.</p>\n        <ul>\n          <li>Typesctipt + React</li>\n          <li>Animations - Framer Motion</li>\n        </ul>\n      </>\n    ),\n  },\n  {\n    label: \"What's Next\",\n    body: (\n      <>\n        <ul>\n          <li>\n            Make an alternative field using canvas, WASM and Rust. (Sounds\n            promising)\n          </li>\n        </ul>\n      </>\n    ),\n  },\n];\n\nconst InfoPage: React.FC<InfoPageProps> = ({ onClose }) => {\n  const ref = useRef(null);\n  useClickAway(ref, onClose);\n\n  return (\n    <TransparentBackgroundFullScreen>\n      <motion.div\n        ref={ref}\n        className=\"preview-box\"\n        initial={{ opacity: 0, translateY: -50 }}\n        animate={{ opacity: 1, translateY: 0 }}\n        exit={{ opacity: 0, translateY: 50 }}\n        transition={{ duration: 0.5, delay: 0.2 }}\n      >\n        <TabNavigation tabs={tabs} />\n      </motion.div>\n    </TransparentBackgroundFullScreen>\n  );\n};\nexport default InfoPage;\n","import React, { useState } from \"react\";\nimport Header from \"../components/header/Header\";\nimport Field from \"../components/field/Field\";\nimport PathFinderSettings from \"../components/settings/PathFinderSettings\";\nimport { PREVIEW_STORAGE_KEY } from \"../constants/Preview\";\nimport { AnimatePresence } from \"framer-motion\";\nimport Preview from \"../components/preview/Preview\";\nimport InfoPage from \"../components/preview/InfoPage\";\n\nconst MainView: React.FC<{}> = () => {\n  const [showPreview, setShowPreview] = useState<number>(() => {\n    const val = window.localStorage.getItem(PREVIEW_STORAGE_KEY);\n    return val === \"1\" ? 0 : -1;\n  });\n  const [showInfo, setShowInfo] = useState(false);\n\n  return (\n    <div>\n      <AnimatePresence>\n        {showPreview > -1 && (\n          <Preview page={showPreview} onClose={() => setShowPreview(-1)} />\n        )}\n        {showInfo && <InfoPage onClose={() => setShowInfo(false)} />}\n      </AnimatePresence>\n      <Header\n        onInfo={() => setShowInfo(true)}\n        onTutorial={() => {\n          setShowPreview(0);\n        }}\n      />\n      <main>\n        <Field />\n        <PathFinderSettings onTutorial={(n: number) => setShowPreview(n)} />\n      </main>\n      <footer\n        style={{\n          height: \"40px\",\n          width: \"100vw\",\n          background: \"#0b131b\",\n          position: \"fixed\",\n          bottom: 0,\n          left: 0,\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          color: \"white\",\n          alignItems: \"center\",\n          padding: \"5px\",\n        }}\n      >\n        Created with ♥ by Vladislavs Murzjonoks\n      </footer>\n    </div>\n  );\n};\n\nexport default MainView;\n","export const PREVIEW_STORAGE_KEY = \"preview_version_1.0\";\n","import React, { useState, useEffect } from \"react\";\nimport MainView from \"./views/MainView\";\nimport GridSettingsContext, {\n  defaultContext,\n} from \"./context/GridSettingsContext\";\nimport { Algorithm, SpeedOption, AlgorithmStatus } from \"./types\";\nimport { DIMENSIONS } from \"./constants/Algorithms\";\nimport _ from \"lodash\";\n\nfunction getWidthAndHeight(): [number, number] {\n  const vw = Math.max(\n    document.documentElement.clientWidth || 0,\n    window.innerWidth || 0\n  );\n  const vh = Math.max(\n    document.documentElement.clientHeight || 0,\n    window.innerHeight || 0\n  );\n  return [vw, vh];\n}\n\nfunction App() {\n  const [algorithm, setAlgorithm] = useState<Algorithm>(\n    defaultContext.algorithm\n  );\n  const [walls, setWalls] = useState<number>(defaultContext.walls);\n  const [fieldCallbacks, setFieldCallbacks] = useState(\n    defaultContext.fieldCallbacks\n  );\n  const [speed, setSpeed] = useState<SpeedOption>(defaultContext.speed);\n  const [status, setStatus] = useState<AlgorithmStatus>(defaultContext.status);\n  const [showWeights, setShowWeights] = useState(false);\n  const [dimensions, setDimensions] = useState(() => {\n    const [vw, vh] = getWidthAndHeight();\n    return {\n      ...defaultContext.dimensions,\n      columns: Math.min(\n        Math.max(Math.floor((vw - 96 - 250) / 20), DIMENSIONS.minColumns),\n        DIMENSIONS.maxColumns\n      ),\n      rows: Math.min(\n        Math.max(Math.floor((vh - 128 - 50) / 20), DIMENSIONS.minRows),\n        DIMENSIONS.maxRows\n      ),\n    };\n  });\n  useEffect(() => {\n    const func = _.debounce(() => {\n      const [vw, vh] = getWidthAndHeight();\n\n      const columns = Math.min(\n        Math.max(Math.floor((vw - 96 - 250) / 20), DIMENSIONS.minColumns),\n        DIMENSIONS.maxColumns\n      );\n      const rows = Math.min(\n        Math.max(Math.floor((vh - 128 - 50) / 20), DIMENSIONS.minRows),\n        DIMENSIONS.maxRows\n      );\n\n      setDimensions({\n        columns,\n        rows,\n      });\n    }, 90);\n\n    window.addEventListener(\"resize\", func);\n\n    return () => {\n      window.removeEventListener(\"resize\", func);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <GridSettingsContext.Provider\n        value={{\n          status,\n          showWeights,\n          algorithm,\n          fieldCallbacks,\n          walls,\n          speed,\n          dimensions,\n          setWalls,\n          setAlgorithm,\n          setFieldCallbacks,\n          setSpeed,\n          setStatus,\n          setShowWeights,\n        }}\n      >\n        <MainView />\n      </GridSettingsContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./css/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}